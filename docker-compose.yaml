version: "3"

services:
  semantic-segmentation:
    container_name: semantic_segmentation
    build: ./CIHP_PGN
    volumes: 
      - './data:/usr/src/app/data'
    command: tail -F anything #keep Container running
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  openpose:
    container_name: openpose
    build: ./openpose
    volumes: 
      - './data:/openpose/data'
    command: tail -F anything #keep Container running
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  octopus:
    container_name: octopus
    build: ./octopus
    volumes:
      - './data:/usr/src/app/data'
    command: tail -F anything #keep Container running
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  stitching:
    container_name: human_texture_stitching
    build: ./semantic_human_texture_stitching
    volumes:
      - './data:/usr/src/app/data'
    command: tail -F anything #keep Container running
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  rignet:
    container_name: rignet
    build: ./RigNet
    # network_mode: host
    volumes:
      - './data:/usr/src/app/data'
      - '/tmp/.X11-unix:/tmp/.X11-unix'
    command: tail -F anything #keep Container running
    runtime: nvidia
    environment:
    - NVIDIA_VISIBLE_DEVICES=all  # or device number (e.g. 0) to allow a single gpu
    - DISPLAY=${DISPLAY}
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
  blender:
    build: ./docker-blender
    container_name: blender
    runtime: nvidia
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - NVIDIA_VISIBLE_DEVICES=all    
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - SUBFOLDER=/ #optional
      - KEYBOARD=de-de-qwertz #optional
    volumes:
      - /path/to/config:/config
      - './data:/data'
    ports:
      - 3000:3000
    devices:
      - /dev/dri:/dev/dri #optional
    restart: unless-stopped